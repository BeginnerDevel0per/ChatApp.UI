@using ChatApp.UI.Shared.DTOs.UserDTOs
@using ChatApp.UI.Components
@using ChatApp.UI.Pages
<div class="row me-3 ms-3">
    <h5 class="Nav-Title text-white">Yeni Kullanıcı Ara</h5>
    <div class="mb-3">
        <input @bind="Search" autocomplete="off" @bind:event="oninput" @onkeydown="ListUsers" @bind:after="ListUsers" type="text" class="form-control bg-dark text-white border-0" id="exampleFormControlInput1" placeholder="Kullanıcı Adı">
    </div>
</div>
@if (Users != null && Users.Count > 0)
{
    @foreach (var item in Users)
    {
        <a href="javascript:void(0);" @onclick="()=>GetUser(item.Id)" class="text-decoration-none">
            <div class="card border-0  ">
                <div class="row  align-items-center g-0">
                    <div class="col-3 d-flex justify-content-end">
                        @if (item.ProfileImage != null)
                        {
                            string ProfileImage = $"https://localhost:7255/UserProfileImage/{item.ProfileImage}";

                            <img alt="Icon" width="70" height="70" class="rounded-circle" src="@ProfileImage" style="object-fit:cover;">
                        }
                        else
                        {
                            <img alt="Icon" width="70" height="70" class="rounded-circle" src="/UserIcon.png" style="object-fit:cover;">
                        }
                    </div>
                    <div class="col-9">
                        <div class="card-body  text-start text-truncate">
                            <h6 class="card-title">@item.UserName</h6>
                            <span style="font-size:x-small; " class="text-muted">Bu kullanıcıyı görüntülemek için tıklayın</span>
                        </div>
                    </div>
                </div>
            </div>
        </a>
    }

}
else
{

    <div class="row m-3 mt-3">
        <span style="color:gray;">Arama kutusundan bir kullanıcıyı arayabilir ve arkadaşlık isteği gönderebilirsin.</span>
    </div>
}
@if (getUserProfileDto != null)
{
    <ChatApp.UI.Components.Modal @ref="modal">
        <div class="row  d-flex justify-content-center align-items-center">
            <div class="row d-flex justify-content-center align-items-center">
                <div class="col-auto">
                    @if (getUserProfileDto.UserDto.ProfileImage != null)
                    {
                        string ProfileImage = $"https://localhost:7255/UserProfileImage/{getUserProfileDto.UserDto.ProfileImage}";

                        <img alt="Icon" width="70" height="70" class="rounded-circle" src="@ProfileImage" style="object-fit:cover;">
                    }
                    else
                    {
                        <img alt="Icon" width="70" height="70" class="rounded-circle" src="/UserIcon.png" style="object-fit:cover;">
                    }
                </div>
            </div>

            <div class="row d-flex justify-content-center align-items-center">
                <div class="col-auto text-center">
                    <h6 class="text-white">@getUserProfileDto.UserDto.UserName</h6>
                </div>

            </div>
            <div class="row w-100 m-0 p-0 d-flex justify-content-center align-items-center">

                @if (getUserProfileDto.FriendOfUsersDto != null)
                {
                    if (SendingOrReceivingRequestStatus == true)
                    {//İSTEK ALINMIŞ.
                        <div class="col-auto">
                            <button class="btn btn-primary btn-sm border-0" @onclick="()=>AcceptRequest(getUserProfileDto.UserDto.Id)">Kabul Et</button>
                            <button class="btn btn-dark btn-sm border-0" @onclick="()=>RemoveRequestOrFriend(getUserProfileDto.UserDto.Id)">İsteği Sil</button>
                            <button class="btn btn-danger btn-sm">Kapat</button>
                        </div>
                        <div class="row mt-3 mb-3 text-center">
                            <span style="color:gray; font-size:small;">Bu kullanıcı sana istek göndermiş.</span>
                        </div>
                    }
                    else if (SendingOrReceivingRequestStatus == false)
                    {//İSTEK GÖNDERİLMİŞ.


                        <div class="col-auto">
                            <button class="btn btn-dark btn-sm border-0" @onclick="()=>RemoveRequestOrFriend(getUserProfileDto.UserDto.Id)">İptal Et</button>
                            <button class="btn btn-danger btn-sm">Kapat</button>
                        </div>
                        <div class="row mt-3 mb-3 text-center">
                            <span style="color:gray; font-size:small;">Bu kullanıcıya istek göndermişsin.</span>
                        </div>
                    }
                    else if (getUserProfileDto.FriendOfUsersDto.IsRequestAccepted == true)
                    {//KULLANICILAR BİRBİRİNİ ARKADAŞ OLARAK EKLEMİŞLER.
                        <div class="col-auto  d-flex">
                            <button class="btn btn-success btn-sm border-0" @onclick="()=>SendMessage(getUserProfileDto.UserDto.Id)" style="background-color:#ff8c00;">Mesaj Gönder</button>
                            <button class="btn btn-dark btn-sm border-0 me-1 ms-1" @onclick="()=>RemoveRequestOrFriend(getUserProfileDto.UserDto.Id)">Arkadaşlıktan Çıkar</button>
                            <button class="btn btn-danger btn-sm">Kapat</button>
                        </div>
                   
                        <div class="row mt-3 mb-3 text-center">
                            <span style="color:gray; font-size:small;">Bu kullanıcıyla arkadaşsınız.</span>
                        </div>
                    }
                }
                else
                {
                    <div class="col-auto">

                        <button class="btn btn-success btn-sm border-0" style="background-color:#ff8c00;" @onclick="()=>SendRequest(getUserProfileDto.UserDto.Id)">İstek Gönder</button>
                        <button class="btn btn-danger btn-sm">Kapat</button>
                    </div>
                    <div class="row mt-3 mb-3 text-center">
                        <span style="color:gray; font-size:small;">Bu kullanıcı eğer isteğini kabul ederse mesaj gönderebilirsin.</span>
                    </div>
                }



            </div>

        </div>
    </ChatApp.UI.Components.Modal>
}

@code {
    List<SearchUserDto>? Users = new();
    public string? Search { get; set; }
    public string? deneme { get; set; }
    public Modal modal { get; set; }
    public bool? SendingOrReceivingRequestStatus { get; set; }
    public GetUserProfileDto getUserProfileDto { get; set; } = new();
    private async Task ListUsers()
    {
        Users?.Clear();
        if (Search?.Length > 2)
        {

            var response = await Http.GetAsync($"/SearchUser/{Search}");
            if (response.IsSuccessStatusCode)
            {
                Users = await response.Content.ReadFromJsonAsync<List<SearchUserDto>>();
            }
        }
        StateHasChanged();
    }

    private async void GetUser(Guid GetUserId)
    {
        var request = await Http.GetAsync($"/GetUserProfile/{GetUserId}");
        if (request.IsSuccessStatusCode)
        {
            getUserProfileDto = await request.Content.ReadFromJsonAsync<GetUserProfileDto>();
            SendingOrReceivingRequestStatus = null;
            if (getUserProfileDto.FriendOfUsersDto?.FriendOrRequestId == getUserProfileDto.UserDto.Id && getUserProfileDto.FriendOfUsersDto.IsRequestAccepted == false)
            {
                SendingOrReceivingRequestStatus = true;
                //İSTEK ALINMIŞ
            }
            else if (getUserProfileDto.FriendOfUsersDto?.UserId == getUserProfileDto.UserDto.Id && getUserProfileDto.FriendOfUsersDto.IsRequestAccepted == false)
            {
                //İSTEK GÖNDERİLMİŞ
                SendingOrReceivingRequestStatus = false;

            }

            modal.ModalShow = true;
            StateHasChanged();
        }
    }

    private async void AcceptRequest(Guid AcceptId)
    {
        var request = await Http.GetAsync($"/AcceptFriendRequest/{AcceptId}");
        if (request.IsSuccessStatusCode)
        { 

            GetUser(AcceptId);
        }

    }
    private async void SendRequest(Guid SendId)
    {
        var request = await Http.GetAsync($"/SendFriendRequest/{SendId}");
        if (request.IsSuccessStatusCode)
        {
            GetUser(SendId);
        }
    }
    private async void RemoveRequestOrFriend(Guid RemoveRequestId)
    {
        var request = await Http.DeleteAsync($"/RemoveFriendRequestOrFriend/{RemoveRequestId}");
        if (request.IsSuccessStatusCode)
        {
            GetUser(RemoveRequestId);
        }

    }
    private void SendMessage(Guid Id)
    {
        NavigationManager.NavigateTo($"message/{Id}");

    }

}
